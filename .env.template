# Postgres Database
#
# POSTGRES_DB=postgres
# POSTGRES_USER=postgres
POSTGRES_PASSWORD=
#
# used by the controller app to connect to the postgress server host
# POSTGRES_HOST=localhost

# MQTT Broker
#
# Upstream broker is where tag events are sent
# MQTT_UPSTREAM_HOST='localhost'
# MQTT_UPSTREAM_PORT=1883
# MQTT_UPSTREAM_USERNAME=''
# MQTT_UPSTREAM_PASSWORD=''
#
# Downstream broker is where tag reads from sensors arrive
# and !! IMPORTANT !! is sent to the sensors for them to
# publish to, so it must be a host/ip that is reachable from the sensors
MQTT_DOWNSTREAM_HOST=
# MQTT_DOWNSTREAM_PORT=1883
# MQTT_DOWNSTREAM_USERNAME=''
# MQTT_DOWNSTREAM_PASSWORD=''

# At the time of publishing the controller code, the Impinj sensor certificates
# are generated per sensor upon start up and are self-signed. This causes the TLS
# connections to fail as there is no certificate authority available to establish
# root of trust. Be aware of running in this mode in a production environment!
#
# NOTE: !! Be aware of the implications of running this mode in a production environment !!
#
NODE_TLS_REJECT_UNAUTHORIZED=0

# this value is the base64 encoded value of
# the impinj username:password and should be set
# appropriately per the configuration of the sensor
# > echo -n $USERNAME:$NEW_PASSWORD | openssl enc -base64
#
# copy the output of the above command as the value of the variable
# NOTE!!: at this time, all sensors MUST use the same username:password combination.
#
IMPINJ_BASIC_AUTH=

# LOGGING
#
# Log Levels (error, warn, info, verbose, debug, silly)
# source code default is info
# LOG_LEVEL=info
#
# Log file is optional, if not specified, no log files are created.
# LOG_FILE=${PROJECT_DIR}/controller/run/log/controller.log
